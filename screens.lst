                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.4 #11941 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module screens
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _perform_delay_joypad
                                     12 	.globl _perform_delay
                                     13 	.globl _text_putstr_win
                                     14 	.globl _text_load_font
                                     15 	.globl _set_bkg_tiles
                                     16 	.globl _set_bkg_data
                                     17 	.globl _set_bkg_palette
                                     18 	.globl _palette_splash
                                     19 	.globl _clear_title_screen
                                     20 	.globl _splash_screen
                                     21 	.globl _title_screen
                                     22 ;--------------------------------------------------------
                                     23 ; special function registers
                                     24 ;--------------------------------------------------------
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _DATA
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _DABS (ABS)
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area _HOME
                                     37 	.area _GSINIT
                                     38 	.area _GSFINAL
                                     39 	.area _GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area _HOME
                                     44 	.area _HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area _CODE
                                     49 ;src/screens.c:21: void	clear_title_screen(void) {
                                     50 ;	---------------------------------
                                     51 ; Function clear_title_screen
                                     52 ; ---------------------------------
      000000                         53 _clear_title_screen::
                                     54 ;src/screens.c:23: perform_delay(15);
      000000 3E 0F                   55 	ld	a, #0x0f
      000002 F5                      56 	push	af
      000003 33                      57 	inc	sp
      000004 CDr00r00                58 	call	_perform_delay
      000007 33                      59 	inc	sp
                                     60 ;src/screens.c:24: BGP_REG = 0xf9;
      000008 3E F9                   61 	ld	a, #0xf9
      00000A E0r00                   62 	ldh	(_BGP_REG+0),a
                                     63 ;src/screens.c:25: set_bkg_palette( 0, 1, &palette_splash[4] );
      00000C 21r85r00                64 	ld	hl, #(_palette_splash + 0x0008)
      00000F E5                      65 	push	hl
      000010 3E 01                   66 	ld	a, #0x01
      000012 F5                      67 	push	af
      000013 33                      68 	inc	sp
      000014 AF                      69 	xor	a, a
      000015 F5                      70 	push	af
      000016 33                      71 	inc	sp
      000017 CDr00r00                72 	call	_set_bkg_palette
      00001A E8 04                   73 	add	sp, #4
                                     74 ;src/screens.c:26: perform_delay(20);
      00001C 3E 14                   75 	ld	a, #0x14
      00001E F5                      76 	push	af
      00001F 33                      77 	inc	sp
      000020 CDr00r00                78 	call	_perform_delay
      000023 33                      79 	inc	sp
                                     80 ;src/screens.c:27: BGP_REG = 0xfe;
      000024 3E FE                   81 	ld	a, #0xfe
      000026 E0r00                   82 	ldh	(_BGP_REG+0),a
                                     83 ;src/screens.c:28: set_bkg_palette( 0, 1, &palette_splash[8] );
      000028 21r8Dr00                84 	ld	hl, #(_palette_splash + 0x0010)
      00002B E5                      85 	push	hl
      00002C 3E 01                   86 	ld	a, #0x01
      00002E F5                      87 	push	af
      00002F 33                      88 	inc	sp
      000030 AF                      89 	xor	a, a
      000031 F5                      90 	push	af
      000032 33                      91 	inc	sp
      000033 CDr00r00                92 	call	_set_bkg_palette
      000036 E8 04                   93 	add	sp, #4
                                     94 ;src/screens.c:29: perform_delay(25);
      000038 3E 19                   95 	ld	a, #0x19
      00003A F5                      96 	push	af
      00003B 33                      97 	inc	sp
      00003C CDr00r00                98 	call	_perform_delay
      00003F 33                      99 	inc	sp
                                    100 ;src/screens.c:30: BGP_REG = 0xff;
      000040 3E FF                  101 	ld	a, #0xff
      000042 E0r00                  102 	ldh	(_BGP_REG+0),a
                                    103 ;src/screens.c:31: set_bkg_palette( 0, 1, &palette_splash[12] );
      000044 21r95r00               104 	ld	hl, #(_palette_splash + 0x0018)
      000047 E5                     105 	push	hl
      000048 3E 01                  106 	ld	a, #0x01
      00004A F5                     107 	push	af
      00004B 33                     108 	inc	sp
      00004C AF                     109 	xor	a, a
      00004D F5                     110 	push	af
      00004E 33                     111 	inc	sp
      00004F CDr00r00               112 	call	_set_bkg_palette
      000052 E8 04                  113 	add	sp, #4
                                    114 ;src/screens.c:32: perform_delay(30);
      000054 3E 1E                  115 	ld	a, #0x1e
      000056 F5                     116 	push	af
      000057 33                     117 	inc	sp
      000058 CDr00r00               118 	call	_perform_delay
      00005B 33                     119 	inc	sp
                                    120 ;src/screens.c:33: BGP_REG = 0xe4;
      00005C 3E E4                  121 	ld	a, #0xe4
      00005E E0r00                  122 	ldh	(_BGP_REG+0),a
                                    123 ;src/screens.c:34: set_bkg_palette( 0, 1, &palette_splash[0] );
      000060 21r7Dr00               124 	ld	hl, #_palette_splash
      000063 E5                     125 	push	hl
      000064 3E 01                  126 	ld	a, #0x01
      000066 F5                     127 	push	af
      000067 33                     128 	inc	sp
      000068 AF                     129 	xor	a, a
      000069 F5                     130 	push	af
      00006A 33                     131 	inc	sp
      00006B CDr00r00               132 	call	_set_bkg_palette
      00006E E8 04                  133 	add	sp, #4
                                    134 ;src/screens.c:35: HIDE_WIN;
      000070 F0r00                  135 	ldh	a, (_LCDC_REG+0)
      000072 E6 DF                  136 	and	a, #0xdf
      000074 E0r00                  137 	ldh	(_LCDC_REG+0),a
                                    138 ;src/screens.c:36: HIDE_BKG;
      000076 F0r00                  139 	ldh	a, (_LCDC_REG+0)
      000078 E6 FE                  140 	and	a, #0xfe
      00007A E0r00                  141 	ldh	(_LCDC_REG+0),a
                                    142 ;src/screens.c:37: }
      00007C C9                     143 	ret
      00007D                        144 _palette_splash:
      00007D F9 5F                  145 	.dw #0x5ff9
      00007F B3 3F                  146 	.dw #0x3fb3
      000081 09 42                  147 	.dw #0x4209
      000083 84 18                  148 	.dw #0x1884
      000085 B3 3F                  149 	.dw #0x3fb3
      000087 B3 3F                  150 	.dw #0x3fb3
      000089 09 42                  151 	.dw #0x4209
      00008B 84 18                  152 	.dw #0x1884
      00008D 09 42                  153 	.dw #0x4209
      00008F 09 42                  154 	.dw #0x4209
      000091 09 42                  155 	.dw #0x4209
      000093 84 18                  156 	.dw #0x1884
      000095 84 18                  157 	.dw #0x1884
      000097 84 18                  158 	.dw #0x1884
      000099 84 18                  159 	.dw #0x1884
      00009B 84 18                  160 	.dw #0x1884
                                    161 ;src/screens.c:39: void	splash_screen(void) {
                                    162 ;	---------------------------------
                                    163 ; Function splash_screen
                                    164 ; ---------------------------------
      00009D                        165 _splash_screen::
                                    166 ;src/screens.c:41: set_bkg_data(0, TILESET_TILE_COUNTSP, TILESETSP);
      00009D 21r00r00               167 	ld	hl, #_TILESETSP
      0000A0 E5                     168 	push	hl
      0000A1 3E 8C                  169 	ld	a, #0x8c
      0000A3 F5                     170 	push	af
      0000A4 33                     171 	inc	sp
      0000A5 AF                     172 	xor	a, a
      0000A6 F5                     173 	push	af
      0000A7 33                     174 	inc	sp
      0000A8 CDr00r00               175 	call	_set_bkg_data
      0000AB E8 04                  176 	add	sp, #4
                                    177 ;src/screens.c:42: set_bkg_tiles(0, 0, TILEMAP_WIDTHSP, TILEMAP_HEIGHTSP, TILEMAPSP);
      0000AD 21r00r00               178 	ld	hl, #_TILEMAPSP
      0000B0 E5                     179 	push	hl
      0000B1 11 14 12               180 	ld	de, #0x1214
      0000B4 D5                     181 	push	de
      0000B5 AF                     182 	xor	a, a
      0000B6 F5                     183 	push	af
      0000B7 33                     184 	inc	sp
      0000B8 AF                     185 	xor	a, a
      0000B9 F5                     186 	push	af
      0000BA 33                     187 	inc	sp
      0000BB CDr00r00               188 	call	_set_bkg_tiles
      0000BE E8 06                  189 	add	sp, #6
                                    190 ;src/screens.c:43: SHOW_BKG;
      0000C0 F0r00                  191 	ldh	a, (_LCDC_REG+0)
      0000C2 F6 01                  192 	or	a, #0x01
      0000C4 E0r00                  193 	ldh	(_LCDC_REG+0),a
                                    194 ;src/screens.c:45: BGP_REG = 0xFF;
      0000C6 3E FF                  195 	ld	a, #0xff
      0000C8 E0r00                  196 	ldh	(_BGP_REG+0),a
                                    197 ;src/screens.c:46: set_bkg_palette( 0, 1, &palette_splash[12] );
      0000CA 21r95r00               198 	ld	hl, #(_palette_splash + 0x0018)
      0000CD E5                     199 	push	hl
      0000CE 3E 01                  200 	ld	a, #0x01
      0000D0 F5                     201 	push	af
      0000D1 33                     202 	inc	sp
      0000D2 AF                     203 	xor	a, a
      0000D3 F5                     204 	push	af
      0000D4 33                     205 	inc	sp
      0000D5 CDr00r00               206 	call	_set_bkg_palette
      0000D8 E8 04                  207 	add	sp, #4
                                    208 ;src/screens.c:47: perform_delay(60);  // ~ 1s
      0000DA 3E 3C                  209 	ld	a, #0x3c
      0000DC F5                     210 	push	af
      0000DD 33                     211 	inc	sp
      0000DE CDr00r00               212 	call	_perform_delay
      0000E1 33                     213 	inc	sp
                                    214 ;src/screens.c:50: BGP_REG = 0xff;
      0000E2 3E FF                  215 	ld	a, #0xff
      0000E4 E0r00                  216 	ldh	(_BGP_REG+0),a
                                    217 ;src/screens.c:51: set_bkg_palette( 0, 1, &palette_splash[12] );
      0000E6 21r95r00               218 	ld	hl, #(_palette_splash + 0x0018)
      0000E9 E5                     219 	push	hl
      0000EA 3E 01                  220 	ld	a, #0x01
      0000EC F5                     221 	push	af
      0000ED 33                     222 	inc	sp
      0000EE AF                     223 	xor	a, a
      0000EF F5                     224 	push	af
      0000F0 33                     225 	inc	sp
      0000F1 CDr00r00               226 	call	_set_bkg_palette
      0000F4 E8 04                  227 	add	sp, #4
                                    228 ;src/screens.c:52: perform_delay(15);
      0000F6 3E 0F                  229 	ld	a, #0x0f
      0000F8 F5                     230 	push	af
      0000F9 33                     231 	inc	sp
      0000FA CDr00r00               232 	call	_perform_delay
      0000FD 33                     233 	inc	sp
                                    234 ;src/screens.c:53: BGP_REG = 0xfe;
      0000FE 3E FE                  235 	ld	a, #0xfe
      000100 E0r00                  236 	ldh	(_BGP_REG+0),a
                                    237 ;src/screens.c:54: set_bkg_palette( 0, 1, &palette_splash[8] );
      000102 21r8Dr00               238 	ld	hl, #(_palette_splash + 0x0010)
      000105 E5                     239 	push	hl
      000106 3E 01                  240 	ld	a, #0x01
      000108 F5                     241 	push	af
      000109 33                     242 	inc	sp
      00010A AF                     243 	xor	a, a
      00010B F5                     244 	push	af
      00010C 33                     245 	inc	sp
      00010D CDr00r00               246 	call	_set_bkg_palette
      000110 E8 04                  247 	add	sp, #4
                                    248 ;src/screens.c:55: perform_delay(15);
      000112 3E 0F                  249 	ld	a, #0x0f
      000114 F5                     250 	push	af
      000115 33                     251 	inc	sp
      000116 CDr00r00               252 	call	_perform_delay
      000119 33                     253 	inc	sp
                                    254 ;src/screens.c:56: BGP_REG = 0xf9;
      00011A 3E F9                  255 	ld	a, #0xf9
      00011C E0r00                  256 	ldh	(_BGP_REG+0),a
                                    257 ;src/screens.c:57: set_bkg_palette( 0, 1, &palette_splash[4] );
      00011E 21r85r00               258 	ld	hl, #(_palette_splash + 0x0008)
      000121 E5                     259 	push	hl
      000122 3E 01                  260 	ld	a, #0x01
      000124 F5                     261 	push	af
      000125 33                     262 	inc	sp
      000126 AF                     263 	xor	a, a
      000127 F5                     264 	push	af
      000128 33                     265 	inc	sp
      000129 CDr00r00               266 	call	_set_bkg_palette
      00012C E8 04                  267 	add	sp, #4
                                    268 ;src/screens.c:58: perform_delay(15);
      00012E 3E 0F                  269 	ld	a, #0x0f
      000130 F5                     270 	push	af
      000131 33                     271 	inc	sp
      000132 CDr00r00               272 	call	_perform_delay
      000135 33                     273 	inc	sp
                                    274 ;src/screens.c:59: BGP_REG = 0xe4;
      000136 3E E4                  275 	ld	a, #0xe4
      000138 E0r00                  276 	ldh	(_BGP_REG+0),a
                                    277 ;src/screens.c:60: set_bkg_palette( 0, 1, &palette_splash[0] );
      00013A 21r7Dr00               278 	ld	hl, #_palette_splash
      00013D E5                     279 	push	hl
      00013E 3E 01                  280 	ld	a, #0x01
      000140 F5                     281 	push	af
      000141 33                     282 	inc	sp
      000142 AF                     283 	xor	a, a
      000143 F5                     284 	push	af
      000144 33                     285 	inc	sp
      000145 CDr00r00               286 	call	_set_bkg_palette
      000148 E8 04                  287 	add	sp, #4
                                    288 ;src/screens.c:61: perform_delay(15);
      00014A 3E 0F                  289 	ld	a, #0x0f
      00014C F5                     290 	push	af
      00014D 33                     291 	inc	sp
      00014E CDr00r00               292 	call	_perform_delay
      000151 33                     293 	inc	sp
                                    294 ;src/screens.c:63: perform_delay(90);  // ~ 1.5s
      000152 3E 5A                  295 	ld	a, #0x5a
      000154 F5                     296 	push	af
      000155 33                     297 	inc	sp
      000156 CDr00r00               298 	call	_perform_delay
      000159 33                     299 	inc	sp
                                    300 ;src/screens.c:66: BGP_REG = 0xe4; // normal palette
      00015A 3E E4                  301 	ld	a, #0xe4
      00015C E0r00                  302 	ldh	(_BGP_REG+0),a
                                    303 ;src/screens.c:67: set_bkg_palette( 0, 1, &palette_splash[0] );
      00015E 21r7Dr00               304 	ld	hl, #_palette_splash
      000161 E5                     305 	push	hl
      000162 3E 01                  306 	ld	a, #0x01
      000164 F5                     307 	push	af
      000165 33                     308 	inc	sp
      000166 AF                     309 	xor	a, a
      000167 F5                     310 	push	af
      000168 33                     311 	inc	sp
      000169 CDr00r00               312 	call	_set_bkg_palette
      00016C E8 04                  313 	add	sp, #4
                                    314 ;src/screens.c:68: perform_delay(15);
      00016E 3E 0F                  315 	ld	a, #0x0f
      000170 F5                     316 	push	af
      000171 33                     317 	inc	sp
      000172 CDr00r00               318 	call	_perform_delay
      000175 33                     319 	inc	sp
                                    320 ;src/screens.c:69: BGP_REG = 0xf9;
      000176 3E F9                  321 	ld	a, #0xf9
      000178 E0r00                  322 	ldh	(_BGP_REG+0),a
                                    323 ;src/screens.c:70: set_bkg_palette( 0, 1, &palette_splash[4] );
      00017A 21r85r00               324 	ld	hl, #(_palette_splash + 0x0008)
      00017D E5                     325 	push	hl
      00017E 3E 01                  326 	ld	a, #0x01
      000180 F5                     327 	push	af
      000181 33                     328 	inc	sp
      000182 AF                     329 	xor	a, a
      000183 F5                     330 	push	af
      000184 33                     331 	inc	sp
      000185 CDr00r00               332 	call	_set_bkg_palette
      000188 E8 04                  333 	add	sp, #4
                                    334 ;src/screens.c:71: perform_delay(15);
      00018A 3E 0F                  335 	ld	a, #0x0f
      00018C F5                     336 	push	af
      00018D 33                     337 	inc	sp
      00018E CDr00r00               338 	call	_perform_delay
      000191 33                     339 	inc	sp
                                    340 ;src/screens.c:72: BGP_REG = 0xfe;
      000192 3E FE                  341 	ld	a, #0xfe
      000194 E0r00                  342 	ldh	(_BGP_REG+0),a
                                    343 ;src/screens.c:73: set_bkg_palette( 0, 1, &palette_splash[8] );
      000196 21r8Dr00               344 	ld	hl, #(_palette_splash + 0x0010)
      000199 E5                     345 	push	hl
      00019A 3E 01                  346 	ld	a, #0x01
      00019C F5                     347 	push	af
      00019D 33                     348 	inc	sp
      00019E AF                     349 	xor	a, a
      00019F F5                     350 	push	af
      0001A0 33                     351 	inc	sp
      0001A1 CDr00r00               352 	call	_set_bkg_palette
      0001A4 E8 04                  353 	add	sp, #4
                                    354 ;src/screens.c:74: perform_delay(15);
      0001A6 3E 0F                  355 	ld	a, #0x0f
      0001A8 F5                     356 	push	af
      0001A9 33                     357 	inc	sp
      0001AA CDr00r00               358 	call	_perform_delay
      0001AD 33                     359 	inc	sp
                                    360 ;src/screens.c:75: BGP_REG = 0xff;
      0001AE 3E FF                  361 	ld	a, #0xff
      0001B0 E0r00                  362 	ldh	(_BGP_REG+0),a
                                    363 ;src/screens.c:76: set_bkg_palette( 0, 1, &palette_splash[12] );
      0001B2 21r95r00               364 	ld	hl, #(_palette_splash + 0x0018)
      0001B5 E5                     365 	push	hl
      0001B6 3E 01                  366 	ld	a, #0x01
      0001B8 F5                     367 	push	af
      0001B9 33                     368 	inc	sp
      0001BA AF                     369 	xor	a, a
      0001BB F5                     370 	push	af
      0001BC 33                     371 	inc	sp
      0001BD CDr00r00               372 	call	_set_bkg_palette
      0001C0 E8 04                  373 	add	sp, #4
                                    374 ;src/screens.c:77: perform_delay(15);
      0001C2 3E 0F                  375 	ld	a, #0x0f
      0001C4 F5                     376 	push	af
      0001C5 33                     377 	inc	sp
      0001C6 CDr00r00               378 	call	_perform_delay
      0001C9 33                     379 	inc	sp
                                    380 ;src/screens.c:79: perform_delay(60);
      0001CA 3E 3C                  381 	ld	a, #0x3c
      0001CC F5                     382 	push	af
      0001CD 33                     383 	inc	sp
      0001CE CDr00r00               384 	call	_perform_delay
      0001D1 33                     385 	inc	sp
                                    386 ;src/screens.c:80: HIDE_BKG;
      0001D2 F0r00                  387 	ldh	a, (_LCDC_REG+0)
      0001D4 E6 FE                  388 	and	a, #0xfe
      0001D6 E0r00                  389 	ldh	(_LCDC_REG+0),a
                                    390 ;src/screens.c:81: }
      0001D8 C9                     391 	ret
                                    392 ;src/screens.c:83: void	title_screen(void) {
                                    393 ;	---------------------------------
                                    394 ; Function title_screen
                                    395 ; ---------------------------------
      0001D9                        396 _title_screen::
                                    397 ;src/screens.c:85: perform_delay(10);
      0001D9 3E 0A                  398 	ld	a, #0x0a
      0001DB F5                     399 	push	af
      0001DC 33                     400 	inc	sp
      0001DD CDr00r00               401 	call	_perform_delay
      0001E0 33                     402 	inc	sp
                                    403 ;src/screens.c:87: set_bkg_data(0, TILESET_SCREEN_TILE_COUNT, TILESET_SCREEN);
      0001E1 21r00r00               404 	ld	hl, #_TILESET_SCREEN
      0001E4 E5                     405 	push	hl
      0001E5 3E CD                  406 	ld	a, #0xcd
      0001E7 F5                     407 	push	af
      0001E8 33                     408 	inc	sp
      0001E9 AF                     409 	xor	a, a
      0001EA F5                     410 	push	af
      0001EB 33                     411 	inc	sp
      0001EC CDr00r00               412 	call	_set_bkg_data
      0001EF E8 04                  413 	add	sp, #4
                                    414 ;src/screens.c:88: set_bkg_tiles(0, 0, TILEMAP_SCREEN_WIDTH, TILEMAP_SCREEN_HEIGHT, TILEMAP_SCREEN);
      0001F1 21r00r00               415 	ld	hl, #_TILEMAP_SCREEN
      0001F4 E5                     416 	push	hl
      0001F5 11 14 12               417 	ld	de, #0x1214
      0001F8 D5                     418 	push	de
      0001F9 AF                     419 	xor	a, a
      0001FA F5                     420 	push	af
      0001FB 33                     421 	inc	sp
      0001FC AF                     422 	xor	a, a
      0001FD F5                     423 	push	af
      0001FE 33                     424 	inc	sp
      0001FF CDr00r00               425 	call	_set_bkg_tiles
      000202 E8 06                  426 	add	sp, #6
                                    427 ;src/screens.c:90: BGP_REG = 0xe4; // puts back the PALETTE to its init point, very important to not have a forever with/black background
      000204 3E E4                  428 	ld	a, #0xe4
      000206 E0r00                  429 	ldh	(_BGP_REG+0),a
                                    430 ;src/screens.c:91: set_bkg_palette( 0, 1, &palette_splash[0] );
      000208 21r7Dr00               431 	ld	hl, #_palette_splash
      00020B E5                     432 	push	hl
      00020C 3E 01                  433 	ld	a, #0x01
      00020E F5                     434 	push	af
      00020F 33                     435 	inc	sp
      000210 AF                     436 	xor	a, a
      000211 F5                     437 	push	af
      000212 33                     438 	inc	sp
      000213 CDr00r00               439 	call	_set_bkg_palette
      000216 E8 04                  440 	add	sp, #4
                                    441 ;src/screens.c:92: SHOW_BKG;
      000218 F0r00                  442 	ldh	a, (_LCDC_REG+0)
      00021A F6 01                  443 	or	a, #0x01
      00021C E0r00                  444 	ldh	(_LCDC_REG+0),a
                                    445 ;src/screens.c:95: text_load_font(1);
      00021E 3E 01                  446 	ld	a, #0x01
      000220 F5                     447 	push	af
      000221 33                     448 	inc	sp
      000222 CDr00r00               449 	call	_text_load_font
      000225 33                     450 	inc	sp
                                    451 ;src/../include/../gbdk2020/include/gb/gb.h:888: WX_REG=x, WY_REG=y;
      000226 3E 00                  452 	ld	a, #0x00
      000228 E0r00                  453 	ldh	(_WX_REG+0),a
      00022A 3E 80                  454 	ld	a, #0x80
      00022C E0r00                  455 	ldh	(_WY_REG+0),a
                                    456 ;src/screens.c:97: text_putstr_win(0, 0, "     press start     \n                   ");
      00022E 21r67r02               457 	ld	hl, #___str_0
      000231 E5                     458 	push	hl
      000232 AF                     459 	xor	a, a
      000233 F5                     460 	push	af
      000234 33                     461 	inc	sp
      000235 AF                     462 	xor	a, a
      000236 F5                     463 	push	af
      000237 33                     464 	inc	sp
      000238 CDr00r00               465 	call	_text_putstr_win
      00023B E8 04                  466 	add	sp, #4
                                    467 ;src/screens.c:99: SHOW_WIN;
      00023D F0r00                  468 	ldh	a, (_LCDC_REG+0)
      00023F F6 20                  469 	or	a, #0x20
      000241 E0r00                  470 	ldh	(_LCDC_REG+0),a
                                    471 ;src/screens.c:101: while (1) {
      000243                        472 00106$:
                                    473 ;src/screens.c:102: if (perform_delay_joypad(45))
      000243 3E 2D                  474 	ld	a, #0x2d
      000245 F5                     475 	push	af
      000246 33                     476 	inc	sp
      000247 CDr00r00               477 	call	_perform_delay_joypad
      00024A 33                     478 	inc	sp
      00024B 7B                     479 	ld	a, e
      00024C B7                     480 	or	a, a
      00024D C0                     481 	ret	NZ
                                    482 ;src/screens.c:104: HIDE_WIN;
      00024E F0r00                  483 	ldh	a, (_LCDC_REG+0)
      000250 E6 DF                  484 	and	a, #0xdf
      000252 E0r00                  485 	ldh	(_LCDC_REG+0),a
                                    486 ;src/screens.c:105: if (perform_delay_joypad(25))
      000254 3E 19                  487 	ld	a, #0x19
      000256 F5                     488 	push	af
      000257 33                     489 	inc	sp
      000258 CDr00r00               490 	call	_perform_delay_joypad
      00025B 33                     491 	inc	sp
      00025C 7B                     492 	ld	a, e
      00025D B7                     493 	or	a, a
      00025E C0                     494 	ret	NZ
                                    495 ;src/screens.c:107: SHOW_WIN;
      00025F F0r00                  496 	ldh	a, (_LCDC_REG+0)
      000261 F6 20                  497 	or	a, #0x20
      000263 E0r00                  498 	ldh	(_LCDC_REG+0),a
                                    499 ;src/screens.c:109: }
      000265 18 DC                  500 	jr	00106$
      000267                        501 ___str_0:
      000267 20 20 20 20 20 70 72   502 	.ascii "     press start     "
             65 73 73 20 73 74 61
             72 74 20 20 20 20 20
      00027C 0A                     503 	.db 0x0a
      00027D 20 20 20 20 20 20 20   504 	.ascii "                   "
             20 20 20 20 20 20 20
             20 20 20 20 20
      000290 00                     505 	.db 0x00
                                    506 	.area _CODE
                                    507 	.area _CABS (ABS)
